# @todo these "first:1000" will possibly miss results if there are more than 1000
# this will cause a silent error. GQL Resolver needs to be updated to allow null search params
# to return all possible values
query getCategories {
  categories(first: 1000) {
    id
  }
}

query getCountries {
  countries(first: 1000) {
    id
  }
}

query getVintages {
  projects(first: 1000) {
    vintage
  }
}

query getPurchasesById($id: Bytes) {
  purchases(first: 1, where: { id: $id }) {
    id
    amount
    user {
      id
    }
    listing {
      id
      seller {
        id
      }
      project {
        country {
          id
        }
        key
        methodology
        name
        projectID
        vintage
      }
    }
    price
  }
}

query getUserByWallet($wallet: Bytes) {
  users(where: { id: $wallet }) {
    listings {
      ...ListingFragment
      seller {
        id
      }
      project {
        ...ProjectFragment
        category {
          id
        }
      }
    }
    activities(orderBy: timeStamp, orderDirection: desc, first: 10) {
      ...ActivityFragment
      project {
        category {
          id
        }
        ...ProjectFragment
      }
      seller {
        id
      }
      buyer {
        id
      }
    }
    purchases {
      id
    }
  }
}

query findProjects(
  $country: [String!]
  $category: [String!]
  $search: String
  $vintage: [BigInt!]
) {
  projects(
    where: {
      category_: { id_in: $category }
      country_: { id_in: $country }
      name_contains_nocase: $search
      vintage_in: $vintage
    }
  ) {
    ...ProjectFragment
    listings {
      ...ListingFragment
    }
  }
}

query getProjectsById($key: String, $vintageStr: BigInt) {
  projects(where: { key: $key, vintage: $vintageStr }) {
    ...ProjectFragment
    country {
      id
    }
    listings {
      ...ListingFragment
      seller {
        id
      }
    }
    activities(orderBy: timeStamp, orderDirection: desc, first: 10) {
      ...ActivityFragment
      seller {
        id
      }
      buyer {
        id
      }
    }
  }
}
