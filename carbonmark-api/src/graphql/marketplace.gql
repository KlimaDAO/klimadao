query getCategories {
  categories {
    id
  }
}

query getCountries {
  countries {
    id
  }
}

query getVintages {
  projects {
    vintage
  }
}

query getPurchasesById($id: Bytes) {
  purchases(first: 1, where: { id: $id }) {
    id
    amount
    listing {
      id
      totalAmountToSell
      leftToSell
      tokenAddress
      active
      deleted
      batches
      batchPrices
      singleUnitPrice
      createdAt
      updatedAt
      seller {
        id
      }
      project {
        id
        key
        projectID
        name
        methodology
        vintage
        projectAddress
        registry
        category {
          id
        }
        country {
          id
        }
        updatedAt
      }
    }
    price
    timeStamp
    user {
      id
    }
  }
}

query getUserByWallet($wallet: Bytes) {
  users(where: { id: $wallet }) {
    listings {
      id
      totalAmountToSell
      leftToSell
      tokenAddress
      active
      deleted
      batches
      batchPrices
      singleUnitPrice
      createdAt
      updatedAt
      project {
        name
        category {
          id
        }
        id
        key
        projectID
        methodology
        vintage
        projectAddress
        registry
      }
      seller {
        id
      }
    }
    activities(orderBy: timeStamp, orderDirection: desc, first: 10) {
      id
      amount
      previousAmount
      price
      previousPrice
      timeStamp
      activityType
      project {
        name
        category {
          id
        }
        id
        key
        projectID
        methodology
        vintage
        projectAddress
        registry
      }
      seller {
        id
      }
      buyer {
        id
      }
    }
    purchases {
      id
    }
  }
}

query findProjects(
  $country: [String!]
  $category: [String!]
  $search: String
  $vintage: [BigInt!]
) {
  projects(
    where: {
      category_: { id_in: $category }
      country_: { id_in: $country }
      name_contains_nocase: $search
      vintage_in: $vintage
    }
  ) {
    ...ProjectFragment
  }
}

query getProjectsById($key: String, $vintageStr: BigInt) {
  projects(where: { key: $key, vintage: $vintageStr }) {
    ...ProjectFragment
  }
}

fragment ListingFragment on Listing {
  id
  totalAmountToSell
  leftToSell
  tokenAddress
  active
  deleted
  batches
  batchPrices
  singleUnitPrice
  createdAt
  updatedAt
  seller {
    id
  }
}

fragment ProjectFragment on Project {
  id
  key
  projectID
  name
  vintage
  projectAddress
  registry
  methodology
  projectType
  region
  country {
    id
  }
  listings {
    ...ListingFragment
  }
  activities(orderBy: timeStamp, orderDirection: desc, first: 10) {
    id
    amount
    previousAmount
    price
    previousPrice
    timeStamp
    activityType
    seller {
      id
    }
    buyer {
      id
    }
  }
}
