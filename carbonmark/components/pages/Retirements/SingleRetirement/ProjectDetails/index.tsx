import { Anchor as A } from "@klimadao/lib/components";
import { urls } from "@klimadao/lib/constants";
import { KlimaRetire } from "@klimadao/lib/types/subgraph";
import { getImageSizes } from "@klimadao/lib/utils";
import { Trans, t } from "@lingui/macro";
import LaunchIcon from "@mui/icons-material/Launch";
import { CarbonmarkButton } from "components/CarbonmarkButton";
import { ProjectImage } from "components/ProjectImage";
import { Text } from "components/Text";
import { urls as carbonmarkUrls } from "lib/constants";
import { CategoryName, Project } from "lib/types/carbonmark.types";
import Image from "next/image";
import carbonmarkLogo from "public/carbonmark.svg";
import Moss from "public/category/MOSS.jpeg";
import { FC } from "react";
import * as styles from "./styles";

type Props = {
  isMossOffset: boolean;
  category: CategoryName | null;
  description: Project["description"] | null;
  retirement: Partial<KlimaRetire & { category: CategoryName }>;
  beneficiaryAddress: string;
  retirementIndex: string;
};

export const ProjectDetails: FC<Props> = (props) => {
  const isMossOffset =
    props?.retirement?.retire?.credit.bridgeProtocol === "MOSS";
  const description = isMossOffset ? (
    <Trans>
      MC02 credits are generated by projects that preserve the Amazon Forest,
      with all sorts of positive externalities such as the creation of local
      jobs and preservation of local biodiversity. Explore MCO2 on{" "}
      <A href={urls.carbonDashboard}>data.klimadao.finance</A>.
    </Trans>
  ) : props.description ? (
    props.description
  ) : null;
  return (
    <>
      <div className={styles.projectDetails}>
        <Text t="h4" color="lighter">
          <Trans>Project Details</Trans>
        </Text>
        <div className={styles.imageWrapper}>
          <div className={styles.placeholder}>
            {isMossOffset ? (
              <Image
                fill
                src={Moss}
                alt={t`Moss`}
                style={{ objectFit: "cover" }}
                sizes={getImageSizes({
                  desktopLarge: "1116px",
                })}
              />
            ) : (
              <ProjectImage category={props?.category ?? "Other"} />
            )}
          </div>
        </div>
        <div className={styles.textGroup}>
          <Text t="button" color="lightest">
            <Trans>Project Name</Trans>
          </Text>
          <Text>
            {isMossOffset ? (
              <Trans>MOSS Earth MC02</Trans>
            ) : (
              props?.retirement?.retire?.credit.project.name
            )}
          </Text>
        </div>
        {description && (
          <div className={styles.textGroup}>
            <Text t="button" color="lightest">
              <Trans>Description</Trans>
            </Text>
            <Text as="span" className="description">
              {description}
            </Text>
          </div>
        )}
      </div>
      <div className={styles.officialText}>
        <Image
          width={42}
          height={42}
          src={carbonmarkLogo}
          alt="Carbonmark Logo"
        />
        <Text t="body2" color="lightest">
          <Trans>Certificate for Carbon Retirement</Trans>
        </Text>
      </div>
      <Text t="body2" color="lightest">
        <Trans>
          This represents the permanent retirement of a digital carbon asset.
          This retirement and the associated data are immutable public records.
        </Trans>
      </Text>
      <div className={styles.buttons}>
        {!props.isMossOffset && (
          <CarbonmarkButton
            icon={<LaunchIcon />}
            target="_blank"
            variant="transparent"
            label={<Trans>View Carbon provenance</Trans>}
            href={`${carbonmarkUrls.retirements}/${props.beneficiaryAddress}/${props.retirementIndex}/provenance`}
          />
        )}
      </div>
    </>
  );
};
