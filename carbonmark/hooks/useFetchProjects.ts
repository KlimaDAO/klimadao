import { useGetProjects } from ".generated/carbonmark-api-sdk/hooks";
import { GetProjectsQueryResponse } from ".generated/carbonmark-api-sdk/types";
import { isEqual } from "lodash";
import { useEffect, useRef } from "react";

/**
 * Unfortunately the SWR hooks generated by Kubb do not include params or config in the URL provided to `useSWR`
 * This is a problem because SWR does not build it's request keys using the params by default as react-query does.
 * The end result being that changes to params provided to the hook does not trigger a new fetch.
 *
 * This wrapper is a stopgap solution until we shift to react-query or the Kubb swr package is updated (perhaps by us)
 *
 * @note we may need to do the same for other generated hooks
 */
export const useFetchProjects = (
  ...args: Parameters<typeof useGetProjects<GetProjectsQueryResponse>>
) => {
  const res = useGetProjects(...args);
  const prevParams = useRef(args[0]);
  const currParams = args[0];

  useEffect(() => {
    if (!isEqual(prevParams.current, currParams)) {
      res.mutate();
      prevParams.current = currParams;
    }
  }, [currParams, res.mutate]);

  return res;
};
